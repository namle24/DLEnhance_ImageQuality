name: train_realesrgan_siamese_x4plus
model_type: RealESRGANSiameseModel
num_gpu: 1
scale: 4
use_amp: true  # Enable Automatic Mixed Precision

datasets:
  train:
    name: TrainSiamese
    type: PairedSiameseImageDataset
    phase: train
    dataroot_gt: /datasets/RealESRGAN_data/dataset/train
    dataroot_lq_a: /datasets/RealESRGAN_data/dataset/train
    dataroot_lq_b: /datasets/RealESRGAN_data/dataset/train
    meta_info_file: /datasets/RealESRGAN_data/meta_info/meta_info_triplet_nosub.txt
    io_backend:
      type: disk
    gt_size: 256
    use_hflip: true
    use_rot: false  
    scale: 4
    num_workers: 2  # Increased for better IO performance
    use_shuffle: true
    batch_size_per_gpu: 4
    max_retry: 3  # Retry for corrupted images
    skip_corrupted: true  # Skip corrupted images
    dataset_enlarge_ratio: 1

  # val:
  #   name: ValStandard  
  #   type: PairedImageDataset 
  #   dataroot_gt: /datasets/RealESRGAN_data/dataset/test/HR
  #   dataroot_lq: /datasets/RealESRGAN_data/dataset/test/LR_moderate
  #   io_backend:
  #     type: disk
  #   scale: 4
  #   batch_size_per_gpu: 4
  #   num_workers: 2

network_g:
  type: RRDBNetFeatOut
  num_in_ch: 3
  num_out_ch: 3
  scale: 4
  num_feat: 64
  num_block: 23
  num_grow_ch: 32
  return_intermediate: true 

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  spectral_norm: true

path:
  pretrain_network_g: /home/namlh/DLEnhance_ImageQuality/Real-ESRGAN/weights/RealESRNet_x4plus.pth
  param_key_g: params_ema
  strict_load_g: true
  resume_state: /home/namlh/DLEnhance_ImageQuality/Real-ESRGAN/experiments/train_realesrgan_siamese/training_states/20000.state

train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4  
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: CosineAnnealingRestartLR
    periods: [250000, 250000, 250000, 250000]  # Cosine annealing with restarts
    restart_weights: [1, 0.5, 0.5, 0.5]  # Gradually reduce learning rate
    eta_min: !!float 1e-7  # Minimum learning rate

  total_iter: 400000 
  warmup_iter: -1

  # Loss configurations
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      'conv5_4': 1.0
      'conv4_4': 0.5  # Additional layer for better feature matching
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: 1.0
    style_weight: 0.1  # Increased style weight

  # Knowledge distillation parameters
  lambda_kd_out: 0.5  
  lambda_kd_feat: 0.5  

  # Additional regularization
  gan_opt:
    type: GANLoss
    gan_type: hinge
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: 0.1  # GAN loss weight

val:
  val_freq: !!float 5e3
  save_img: true
  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true  # Test on Y channel for better evaluation
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: true

logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: realesrgan_siamese
    resume_id: ~